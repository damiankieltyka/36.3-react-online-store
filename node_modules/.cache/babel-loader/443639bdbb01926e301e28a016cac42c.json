{"ast":null,"code":"var _jsxFileName = \"/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/components/CartItem/CartItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CartItem.scss';\n\nconst CartItem = props => {\n  const cartItem = props.cartItem,\n        changeQuantity = props.changeQuantity,\n        removeFromCart = props.removeFromCart;\n  return React.createElement(\"div\", {\n    className: \"cartItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cartItemContainer container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6 col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thumbnailCell cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"miniature\",\n    to: \"products/\" + cartItem.item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"imgWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(`../../images/${cartItem.item.imgs}`),\n    alt: `${cartItem.item.name} cover`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"col-6 col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleCell cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"products/\" + cartItem.item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, cartItem.item.name)))), React.createElement(\"div\", {\n    className: \"col-6 col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"priceCell cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pricesWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"jointPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"$ \", (cartItem.item.price * cartItem.quantity).toFixed(2)), React.createElement(\"label\", {\n    className: \"singlePrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"$ \", cartItem.item.price, \" per item\")))), React.createElement(\"div\", {\n    className: \"col-6 col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"quantityCell cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"backgroundBtn quantityButton\",\n    onClick: (id, quantity) => changeQuantity(cartItem.item.id, cartItem.quantity - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"input\", {\n    className: \"quantityInput\",\n    type: \"number\",\n    value: cartItem.quantity,\n    onChange: e => changeQuantity(cartItem.item.id, e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"backgroundBtn quantityButton\",\n    onClick: (id, quantity) => changeQuantity(cartItem.item.id, cartItem.quantity + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"div\", {\n    className: \"removeCell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: id => removeFromCart(cartItem.item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u2715\")))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/components/CartItem/CartItem.js"],"names":["React","Link","CartItem","props","cartItem","changeQuantity","removeFromCart","item","id","require","imgs","name","price","quantity","toFixed","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CartItem.scss';\n\nconst CartItem = props => {\n  const { cartItem, changeQuantity, removeFromCart } = props;\n  return (\n    <div className=\"cartItem\">\n      <div className=\"cartItemContainer container\">\n        <div className=\"row\">\n          <div className=\"col-6 col-md-3\">\n            <div className=\"thumbnailCell cell\">\n              <Link className=\"miniature\" to={\"products/\" + cartItem.item.id}>\n                <div className=\"imgWrapper\">\n                  <img src={require(`../../images/${cartItem.item.imgs}`)} alt={`${cartItem.item.name} cover`} />\n                </div>\n              </Link>\n            </div>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <div className=\"titleCell cell\">\n              <Link to={\"products/\" + cartItem.item.id}>\n                <h3>{cartItem.item.name}</h3>\n              </Link>\n            </div>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <div className=\"priceCell cell\">\n              <div className=\"pricesWrapper\">\n                <label className=\"jointPrice\">$ {(cartItem.item.price * cartItem.quantity).toFixed(2)}</label>\n                <label className=\"singlePrice\">$ {cartItem.item.price} per item</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <div className=\"quantityCell cell\">\n              <button className=\"backgroundBtn quantityButton\" onClick={(id, quantity) => changeQuantity(cartItem.item.id, cartItem.quantity - 1)}>-</button>\n              <input className=\"quantityInput\" type=\"number\" value={cartItem.quantity} onChange={e => changeQuantity(cartItem.item.id, e.target.value)} />\n              <button className=\"backgroundBtn quantityButton\" onClick={(id, quantity) => changeQuantity(cartItem.item.id, cartItem.quantity + 1)}>+</button>\n            </div>\n          </div>\n          <div className=\"removeCell\">\n            <button onClick={(id) => removeFromCart(cartItem.item.id)}>&#10005;</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}