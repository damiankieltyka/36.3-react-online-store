{"ast":null,"code":"var _jsxFileName = \"/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cart from '../components/Cart/Cart';\nimport { removeFromCart, changeQuantity, useCoupon, toCheckout } from '../actions/cart-actions';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.reducedSubtotal = () => {\n      const cartItems = this.props.cartItems;\n      let subtotalValues = [];\n      cartItems.map(cartItem => subtotalValues.push(cartItem.quantity * cartItem.item.price));\n\n      function sum(x, y) {\n        return x + y;\n      }\n\n      ;\n      return subtotalValues.length !== 0 ? subtotalValues.reduce(sum) : 0;\n    };\n\n    this.finalSubtotal = () => {\n      const discountCoupon = this.props.discountCoupon;\n      const reducedSubtotal = this.reducedSubtotal;\n\n      if (discountCoupon.type === \"minus\") {\n        return (reducedSubtotal() - discountCoupon.value).toFixed(2);\n      } else if (discountCoupon.type === \"percent\") {\n        return (reducedSubtotal() - reducedSubtotal() * (discountCoupon.value / 100)).toFixed(2);\n      } else {\n        return reducedSubtotal().toFixed(2);\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          cartItems = _this$props.cartItems,\n          removeFromCart = _this$props.removeFromCart,\n          changeQuantity = _this$props.changeQuantity,\n          useCoupon = _this$props.useCoupon,\n          toCheckout = _this$props.toCheckout,\n          coupons = _this$props.coupons,\n          discountCoupon = _this$props.discountCoupon,\n          shippingCost = _this$props.shippingCost;\n    return React.createElement(Cart, {\n      cartItems: cartItems,\n      removeFromCart: id => removeFromCart(id),\n      changeQuantity: (id, quantity) => changeQuantity(id, quantity),\n      useCoupon: couponCode => useCoupon(couponCode),\n      toCheckout: subtotal => toCheckout(subtotal),\n      coupons: coupons,\n      discountCoupon: discountCoupon,\n      shippingCost: shippingCost,\n      finalSubtotal: this.finalSubtotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = store => ({\n  cartItems: store.cartReducer.cartItems,\n  coupons: store.cartReducer.coupons,\n  discountCoupon: store.cartReducer.discountCoupon,\n  checkoutData: store.cartReducer.checkoutData,\n  shippingCost: store.cartReducer.shippingCost\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeFromCart: id => dispatch(removeFromCart(id)),\n  changeQuantity: (id, quantity) => dispatch(changeQuantity(id, quantity)),\n  useCoupon: couponCode => dispatch(useCoupon(couponCode)),\n  toCheckout: subtotal => dispatch(toCheckout(subtotal))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/CartContainer.js"],"names":["React","Component","connect","Cart","removeFromCart","changeQuantity","useCoupon","toCheckout","CartContainer","reducedSubtotal","cartItems","props","subtotalValues","map","cartItem","push","quantity","item","price","sum","x","y","length","reduce","finalSubtotal","discountCoupon","type","value","toFixed","render","coupons","shippingCost","id","couponCode","subtotal","mapStateToProps","store","cartReducer","checkoutData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cart from '../components/Cart/Cart';\nimport { removeFromCart, changeQuantity, useCoupon, toCheckout } from '../actions/cart-actions';\n\nclass CartContainer extends Component {\n\n  //  Calculate sum to pay\n  reducedSubtotal = () => {\n    const { cartItems } = this.props;\n    let subtotalValues = [];\n    cartItems.map(cartItem => subtotalValues.push(cartItem.quantity * cartItem.item.price));\n    function sum(x, y) {\n      return x + y;\n    };\n    return subtotalValues.length !== 0 ? subtotalValues.reduce(sum) : 0;\n  }\n\n  //  Amount to pay displayed in cart (after applying coupon codes)\n  finalSubtotal = () => {\n    const { discountCoupon } = this.props;\n    const { reducedSubtotal } = this;\n\n    if (discountCoupon.type === \"minus\") {\n      return (reducedSubtotal() - discountCoupon.value).toFixed(2);\n    }\n    else if (discountCoupon.type === \"percent\") {\n      return (reducedSubtotal() - (reducedSubtotal() * (discountCoupon.value / 100))).toFixed(2);\n    }\n    else {\n      return (reducedSubtotal()).toFixed(2);\n    };\n  }\n\n  render() {\n    const { cartItems, removeFromCart, changeQuantity, useCoupon, toCheckout, coupons, discountCoupon, shippingCost } = this.props;\n    return (\n      <Cart\n        cartItems={cartItems}\n        removeFromCart={(id) => removeFromCart(id)}\n        changeQuantity={(id, quantity) => changeQuantity(id, quantity)}\n        useCoupon={(couponCode) => useCoupon(couponCode)}\n        toCheckout={(subtotal) => toCheckout(subtotal)}\n        coupons={coupons}\n        discountCoupon={discountCoupon}\n        shippingCost={shippingCost}\n        finalSubtotal={this.finalSubtotal}\n      />\n    )\n  }\n};\n\nconst mapStateToProps = store => ({\n  cartItems: store.cartReducer.cartItems,\n  coupons: store.cartReducer.coupons,\n  discountCoupon: store.cartReducer.discountCoupon,\n  checkoutData: store.cartReducer.checkoutData,\n  shippingCost: store.cartReducer.shippingCost\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeFromCart: id => dispatch(removeFromCart(id)),\n  changeQuantity: (id, quantity) => dispatch(changeQuantity(id, quantity)),\n  useCoupon: couponCode => dispatch(useCoupon(couponCode)),\n  toCheckout: subtotal => dispatch(toCheckout(subtotal))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}