{"ast":null,"code":"var _jsxFileName = \"/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/CheckoutContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Checkout from '../../../../../Downloads/online-store-master/src/components/Checkout/Checkout';\nimport CheckoutConfirm from '../../../../../Downloads/online-store-master/src/components/CheckoutConfirm/CheckoutConfirm';\nimport { onCheckout } from '../../../../../Downloads/online-store-master/src/actions/cart-actions';\n\nclass CheckoutContainer extends Component {\n  renderProductlist() {\n    const checkoutData = this.props.checkoutData;\n    return checkoutData.cartItems ? React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, checkoutData.cartItems.map((product, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"checkoutItemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, product.item.name), React.createElement(\"td\", {\n        className: \"checkoutItemPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"$ \", product.item.price.toFixed(2)), React.createElement(\"td\", {\n        className: \"checkoutItemQuantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, product.quantity), React.createElement(\"td\", {\n        className: \"checkoutItemTotal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"$ \", (product.quantity * product.item.price).toFixed(2)));\n    })) : '';\n  }\n\n  render() {\n    const _this$props = this.props,\n          checkoutData = _this$props.checkoutData,\n          onCheckout = _this$props.onCheckout,\n          location = _this$props.location;\n\n    switch (location.pathname) {\n      case \"/checkout/confirm\":\n        return React.createElement(CheckoutConfirm, {\n          checkoutData: checkoutData,\n          renderProductlist: this.renderProductlist(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(Checkout, {\n          checkoutData: checkoutData,\n          renderProductlist: this.renderProductlist(),\n          onCheckout: () => onCheckout(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n    }\n\n    ;\n  }\n\n}\n\n;\n\nconst mapStateToProps = store => ({\n  cartItems: store.cartReducer.cartItems,\n  checkoutData: store.cartReducer.checkoutData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCheckout: () => dispatch(onCheckout())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/CheckoutContainer.js"],"names":["React","Component","connect","Checkout","CheckoutConfirm","onCheckout","CheckoutContainer","renderProductlist","checkoutData","props","cartItems","map","product","index","item","name","price","toFixed","quantity","render","location","pathname","mapStateToProps","store","cartReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,+EAArB;AACA,OAAOC,eAAP,MAA4B,6FAA5B;AACA,SAASC,UAAT,QAA2B,uEAA3B;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAExCM,EAAAA,iBAAiB,GAAG;AAAA,UACVC,YADU,GACO,KAAKC,KADZ,CACVD,YADU;AAElB,WAAOA,YAAY,CAACE,SAAb,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,YAAY,CAACE,SAAb,CAAuBC,GAAvB,CAA2B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9C,aACE;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCD,OAAO,CAACE,IAAR,CAAaC,IAA/C,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqCH,OAAO,CAACE,IAAR,CAAaE,KAAb,CAAmBC,OAAnB,CAA2B,CAA3B,CAArC,CAFF,EAGE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCL,OAAO,CAACM,QAA9C,CAHF,EAIE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqC,CAACN,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACE,IAAR,CAAaE,KAAjC,EAAwCC,OAAxC,CAAgD,CAAhD,CAArC,CAJF,CADF;AAQD,KATA,CADH,CADK,GAaF,EAbL;AAcD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKV,KAD7C;AAAA,UACCD,YADD,eACCA,YADD;AAAA,UACeH,UADf,eACeA,UADf;AAAA,UAC2Be,QAD3B,eAC2BA,QAD3B;;AAEP,YAAQA,QAAQ,CAACC,QAAjB;AACE,WAAK,mBAAL;AACE,eACE,oBAAC,eAAD;AACE,UAAA,YAAY,EAAEb,YADhB;AAEE,UAAA,iBAAiB,EAAE,KAAKD,iBAAL,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOF;AACE,eACE,oBAAC,QAAD;AACE,UAAA,YAAY,EAAEC,YADhB;AAEE,UAAA,iBAAiB,EAAE,KAAKD,iBAAL,EAFrB;AAGE,UAAA,UAAU,EAAE,MAAMF,UAAU,EAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAVJ;;AAiBC;AACF;;AAxCuC;;AAyCzC;;AAED,MAAMiB,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,SAAS,EAAEa,KAAK,CAACC,WAAN,CAAkBd,SADG;AAEhCF,EAAAA,YAAY,EAAEe,KAAK,CAACC,WAAN,CAAkBhB;AAFA,CAAL,CAA7B;;AAKA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,UAAU,EAAE,MAAMqB,QAAQ,CAACrB,UAAU,EAAX;AADY,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Checkout from '../../../../../Downloads/online-store-master/src/components/Checkout/Checkout';\nimport CheckoutConfirm from '../../../../../Downloads/online-store-master/src/components/CheckoutConfirm/CheckoutConfirm';\nimport { onCheckout } from '../../../../../Downloads/online-store-master/src/actions/cart-actions';\n\nclass CheckoutContainer extends Component {\n\n  renderProductlist() {\n    const { checkoutData } = this.props;\n    return checkoutData.cartItems ? (\n      <tbody>\n        {checkoutData.cartItems.map((product, index) => {\n          return (\n            <tr key={index}>\n              <td className=\"checkoutItemName\">{product.item.name}</td>\n              <td className=\"checkoutItemPrice\">$ {product.item.price.toFixed(2)}</td>\n              <td className=\"checkoutItemQuantity\">{product.quantity}</td>\n              <td className=\"checkoutItemTotal\">$ {(product.quantity * product.item.price).toFixed(2)}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    ) : ('');\n  }\n\n  render() {\n    const { checkoutData, onCheckout, location } = this.props;\n    switch (location.pathname) {\n      case \"/checkout/confirm\":\n        return (\n          <CheckoutConfirm\n            checkoutData={checkoutData}\n            renderProductlist={this.renderProductlist()}\n          />\n        )\n\n      default:\n        return (\n          <Checkout\n            checkoutData={checkoutData}\n            renderProductlist={this.renderProductlist()}\n            onCheckout={() => onCheckout()}\n          />\n        )\n    };\n  };\n};\n\nconst mapStateToProps = store => ({\n  cartItems: store.cartReducer.cartItems,\n  checkoutData: store.cartReducer.checkoutData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCheckout: () => dispatch(onCheckout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);\n"]},"metadata":{},"sourceType":"module"}