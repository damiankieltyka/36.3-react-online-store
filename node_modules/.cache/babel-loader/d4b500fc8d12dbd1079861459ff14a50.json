{"ast":null,"code":"var _jsxFileName = \"/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/components/ProductListItem/ProductListItem.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Spinner from '../Spinner/Spinner';\nimport './ProductListItem.scss';\n\nclass ProductListItem extends Component {\n  //  Constructor is used ONLY to check if the image has loaded\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true\n    };\n  } //  Check if the image has loaded\n\n\n  checkLoad() {\n    return this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          updateProducts = _this$props.updateProducts,\n          product = _this$props.product,\n          addToCart = _this$props.addToCart,\n          cartItems = _this$props.cartItems;\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-6 productListItemWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fadeWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CSSTransition, {\n      key: updateProducts,\n      classNames: \"fade\",\n      timeout: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"productListItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"miniature\",\n      to: \"products/\" + product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, product.promoted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"promotedItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Promoted\")) : \"\", product.stock === 1 ? React.createElement(\"div\", {\n      className: \"lastItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Last item\") : \"\", this.checkLoad(), React.createElement(\"img\", {\n      className: \"productListItemImage\",\n      src: require(`../../images/${product.imgs}`),\n      alt: \"ProductListItem\",\n      onLoad: () => this.setState({\n        isLoading: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"productListItemLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"miniature\",\n      to: \"products/\" + product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, product.name))), React.createElement(\"label\", {\n      className: \"currentPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"$ \", product.price), product.promoted ? React.createElement(\"label\", {\n      className: \"oldPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"old price: \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"$ \", product.oldPrice)) : \"\", React.createElement(\"button\", {\n      className: \"addToCart\",\n      onClick: id => addToCart(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, cartItems.find(foundProduct => foundProduct.item === product) ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"check-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \"In cart (\", cartItems.find(foundProduct => foundProduct.item === product).quantity, \")\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"cart-arrow-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Add to cart\")))))))));\n  }\n\n}\n\n;\nexport default ProductListItem;","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/components/ProductListItem/ProductListItem.js"],"names":["React","Component","Link","TransitionGroup","CSSTransition","FontAwesomeIcon","Spinner","ProductListItem","constructor","state","isLoading","checkLoad","render","props","updateProducts","product","addToCart","cartItems","id","promoted","stock","require","imgs","setState","name","price","oldPrice","find","foundProduct","item","quantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";    \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Spinner from '../Spinner/Spinner';\nimport './ProductListItem.scss';\n\nclass ProductListItem extends Component {\n\n  //  Constructor is used ONLY to check if the image has loaded\n  constructor() {\n    super();\n    this.state = {isLoading: true};\n  }\n\n  //  Check if the image has loaded\n  checkLoad() {\n    return this.state.isLoading ? <Spinner /> : <div />;\n  }\n\n  render() {\n    const { updateProducts, product, addToCart, cartItems } = this.props;\n    return (\n      <div className=\"col-12 col-md-6 productListItemWrapper\">\n        <div className=\"fadeWrapper\">\n          <TransitionGroup>\n            <CSSTransition\n              key={updateProducts}\n              classNames=\"fade\"\n              timeout={200}\n            >\n              <div>\n                <div className=\"productListItem\">\n                  <Link className=\"miniature\" to={\"products/\" + product.id}>\n                    <div className=\"thumbnail\">\n                      {product.promoted ? <div>\n                        <div className=\"promotedItem\">Promoted</div>\n                      </div> : \"\"}\n                      {product.stock === 1 ? <div className=\"lastItem\">\n                        Last item\n                      </div> : \"\"}\n                      {this.checkLoad()}\n                      <img className=\"productListItemImage\" src={require(`../../images/${product.imgs}`)} alt=\"ProductListItem\" onLoad={() => this.setState({isLoading: false})} />\n                    </div>\n                  </Link>\n                  <div className=\"productListItemLabel\">\n                    <Link className=\"miniature\" to={\"products/\" + product.id}>\n                      <h3><span>{product.name}</span></h3>\n                    </Link>\n                    <label className=\"currentPrice\">$ {product.price}</label>\n                    {product.promoted ?\n                      <label className=\"oldPrice\">old price: <span>$ {product.oldPrice}</span></label> \n                    : \"\"}\n                    <button className=\"addToCart\" onClick={(id) => (addToCart(product.id))}>\n                      {cartItems.find(foundProduct => foundProduct.item === product) ? \n                        <span>\n                          <FontAwesomeIcon icon=\"check-circle\" />\n                          In cart ({cartItems.find(foundProduct => foundProduct.item === product).quantity})\n                        </span> \n                      :\n                        <span>\n                          <FontAwesomeIcon icon=\"cart-arrow-down\" />\n                          Add to cart\n                        </span>\n                      }\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default ProductListItem;"]},"metadata":{},"sourceType":"module"}