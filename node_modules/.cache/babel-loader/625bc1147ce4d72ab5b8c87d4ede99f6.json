{"ast":null,"code":"import { GET_PRODUCTS, SORT_PRODUCTS, GET_CATEGORY, SEARCH_PRODUCTS, GET_PRODUCT, CHANGE_PRODUCT_PAGE } from '../actions/products-actions';\nimport productsData from '../data/products.json';\nconst initialState = {\n  products: productsData,\n  selectedProduct: {},\n  shownProducts: [],\n  shownCategory: 'All',\n  searchText: '',\n  currentPage: 1,\n  productsPerPage: 6\n};\n\nconst productsReducer = function (state = initialState, action) {\n  let foundProducts = state.products;\n\n  const findProducts = searchText => state.products.filter(product => product.name.toLowerCase().includes(searchText));\n\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return Object.assign({}, state, {\n        products: state.products\n      });\n\n    case SORT_PRODUCTS:\n      let sortedProducts = null;\n\n      function fromAToZ(a, b) {\n        const nameA = a.name.toLowerCase();\n        const nameB = b.name.toLowerCase();\n        let comparison = 0;\n        nameA > nameB ? comparison = 1 : comparison = -1;\n        return comparison;\n      }\n\n      ;\n\n      function lowToHigh(a, b) {\n        let comparison = 0;\n        a.price > b.price ? comparison = 1 : comparison = -1;\n        return comparison;\n      }\n\n      ;\n\n      switch (action.sortingType) {\n        case \"fromAToZ\":\n          sortedProducts = state.products.sort(fromAToZ);\n          foundProducts = findProducts(state.searchText);\n          return Object.assign({}, state, {\n            products: sortedProducts,\n            shownProducts: foundProducts,\n            currentPage: 1\n          });\n\n        case \"fromZToA\":\n          sortedProducts = state.products.sort(fromAToZ).reverse();\n          foundProducts = findProducts(state.searchText);\n          return Object.assign({}, state, {\n            products: sortedProducts,\n            shownProducts: foundProducts,\n            currentPage: 1\n          });\n\n        case \"lowToHigh\":\n          sortedProducts = state.products.sort(lowToHigh);\n          foundProducts = findProducts(state.searchText);\n          return Object.assign({}, state, {\n            products: sortedProducts,\n            shownProducts: foundProducts,\n            currentPage: 1\n          });\n\n        case \"highToLow\":\n          sortedProducts = state.products.sort(lowToHigh).reverse();\n          foundProducts = findProducts(state.searchText);\n          return Object.assign({}, state, {\n            products: sortedProducts,\n            shownProducts: foundProducts,\n            currentPage: 1\n          });\n\n        default:\n          return state;\n      }\n\n      ;\n\n    case GET_CATEGORY:\n      return Object.assign({}, state, {\n        shownCategory: action.category,\n        currentPage: 1\n      });\n\n    case SEARCH_PRODUCTS:\n      const newSearchText = action.searchText.toLowerCase();\n      foundProducts = findProducts(newSearchText);\n      return Object.assign({}, state, {\n        searchText: newSearchText,\n        shownProducts: foundProducts,\n        currentPage: 1\n      });\n\n    case GET_PRODUCT:\n      const selectedProduct = state.products.find(product => product.id === action.id);\n      return Object.assign({}, state, {\n        selectedProduct\n      });\n\n    case CHANGE_PRODUCT_PAGE:\n      const targetPage = action.targetPage;\n      return targetPage <= 0 || targetPage > Math.ceil(state.shownProducts.length / state.productsPerPage) ? state : Object.assign({}, state, {\n        currentPage: targetPage\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default productsReducer;","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/reducers/products-reducer.js"],"names":["GET_PRODUCTS","SORT_PRODUCTS","GET_CATEGORY","SEARCH_PRODUCTS","GET_PRODUCT","CHANGE_PRODUCT_PAGE","productsData","initialState","products","selectedProduct","shownProducts","shownCategory","searchText","currentPage","productsPerPage","productsReducer","state","action","foundProducts","findProducts","filter","product","name","toLowerCase","includes","type","Object","assign","sortedProducts","fromAToZ","a","b","nameA","nameB","comparison","lowToHigh","price","sortingType","sort","reverse","category","newSearchText","find","id","targetPage","Math","ceil","length"],"mappings":"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","sourcesContent":["import { GET_PRODUCTS, SORT_PRODUCTS, GET_CATEGORY, SEARCH_PRODUCTS, GET_PRODUCT, CHANGE_PRODUCT_PAGE } from '../actions/products-actions';\nimport productsData from '../data/products.json';\n\nconst initialState = {\n    products: productsData,\n    selectedProduct: {},\n    shownProducts: [],\n    shownCategory: 'All',\n    searchText: '',\n    currentPage: 1,\n    productsPerPage: 6\n};\n\nconst productsReducer = function(state = initialState, action) {\n    let foundProducts = state.products;\n    const findProducts = (searchText) => state.products.filter(product => product.name.toLowerCase().includes(searchText));\n\n    switch (action.type) {\n        case GET_PRODUCTS:\n            return Object.assign({}, state, {products: state.products});\n\n        case SORT_PRODUCTS:\n            let sortedProducts = null;\n        function fromAToZ(a, b) {\n            const nameA = a.name.toLowerCase();\n            const nameB = b.name.toLowerCase();\n            let comparison = 0;\n            nameA > nameB ? comparison = 1 : comparison = -1;\n            return comparison\n        };\n        function lowToHigh(a, b) {\n            let comparison = 0;\n            a.price > b.price ? comparison = 1 : comparison = -1;\n            return comparison\n        };\n            switch (action.sortingType) {\n                case \"fromAToZ\":\n                    sortedProducts = state.products.sort(fromAToZ);\n                    foundProducts = findProducts(state.searchText);\n                    return Object.assign({}, state, {products: sortedProducts, shownProducts: foundProducts, currentPage: 1});\n\n                case \"fromZToA\":\n                    sortedProducts = state.products.sort(fromAToZ).reverse();\n                    foundProducts = findProducts(state.searchText);\n                    return Object.assign({}, state, {products: sortedProducts, shownProducts: foundProducts, currentPage: 1});\n\n                case \"lowToHigh\":\n                    sortedProducts = state.products.sort(lowToHigh);\n                    foundProducts = findProducts(state.searchText);\n                    return Object.assign({}, state, {products: sortedProducts, shownProducts: foundProducts, currentPage: 1});\n\n                case \"highToLow\":\n                    sortedProducts = state.products.sort(lowToHigh).reverse();\n                    foundProducts = findProducts(state.searchText);\n                    return Object.assign({}, state, {products: sortedProducts, shownProducts: foundProducts, currentPage: 1});\n\n                default:\n                    return state;\n            };\n\n        case GET_CATEGORY:\n            return Object.assign({}, state, {shownCategory: action.category, currentPage: 1});\n\n        case SEARCH_PRODUCTS:\n            const newSearchText = action.searchText.toLowerCase();\n            foundProducts = findProducts(newSearchText);\n            return Object.assign({}, state, {searchText: newSearchText, shownProducts: foundProducts, currentPage: 1});\n\n        case GET_PRODUCT:\n            const selectedProduct = state.products.find(product => product.id === action.id);\n            return Object.assign({}, state, {selectedProduct});\n\n        case CHANGE_PRODUCT_PAGE:\n            const targetPage = action.targetPage;\n            return targetPage <= 0 || targetPage > Math.ceil(state.shownProducts.length / state.productsPerPage) ? state : Object.assign({}, state, {currentPage: targetPage});\n\n        default:\n            return state;\n    };\n};\n\nexport default productsReducer;\n"]},"metadata":{},"sourceType":"module"}