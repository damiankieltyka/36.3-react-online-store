{"ast":null,"code":"var _jsxFileName = \"/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/ProductContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Product from '../components/Product/Product';\nimport NoMatch from '../components/NoMatch/NoMatch';\nimport { getProduct } from '../actions/products-actions';\nimport { addToCart } from '../actions/cart-actions';\n\nclass ProductContainer extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          getProduct = _this$props.getProduct,\n          match = _this$props.match;\n    getProduct(match.params.id);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          selectedProduct = _this$props2.selectedProduct,\n          addToCart = _this$props2.addToCart,\n          cartItems = _this$props2.cartItems,\n          match = _this$props2.match;\n\n    if (selectedProduct) {\n      return React.createElement(Product, {\n        cartItems: cartItems,\n        product: selectedProduct,\n        matchId: match.params.id,\n        addToCart: id => addToCart(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(NoMatch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\n;\n\nconst mapStateToProps = store => ({\n  selectedProduct: store.productsReducer.selectedProduct,\n  cartItems: store.cartReducer.cartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProduct: id => dispatch(getProduct(id)),\n  addToCart: id => dispatch(addToCart(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);","map":{"version":3,"sources":["/Users/damiankieltyka/Developer/WebStorm Projects/online-store-react/src/containers/ProductContainer.js"],"names":["React","Component","connect","Product","NoMatch","getProduct","addToCart","ProductContainer","componentDidMount","props","match","params","id","render","selectedProduct","cartItems","mapStateToProps","store","productsReducer","cartReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAEvCO,EAAAA,iBAAiB,GAAG;AAAA,wBACY,KAAKC,KADjB;AAAA,UACVJ,UADU,eACVA,UADU;AAAA,UACEK,KADF,eACEA,KADF;AAElBL,IAAAA,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAV;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACkD,KAAKJ,KADvD;AAAA,UACCK,eADD,gBACCA,eADD;AAAA,UACkBR,SADlB,gBACkBA,SADlB;AAAA,UAC6BS,SAD7B,gBAC6BA,SAD7B;AAAA,UACwCL,KADxC,gBACwCA,KADxC;;AAEP,QAAII,eAAJ,EAAqB;AACnB,aACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAEC,SADb;AAEE,QAAA,OAAO,EAAED,eAFX;AAGE,QAAA,OAAO,EAAEJ,KAAK,CAACC,MAAN,CAAaC,EAHxB;AAIE,QAAA,SAAS,EAAGA,EAAD,IAAQN,SAAS,CAACM,EAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATD,MAUK;AACH,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAtBsC;;AAuBxC;;AAED,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,eAAe,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,eADP;AAEhCC,EAAAA,SAAS,EAAEE,KAAK,CAACE,WAAN,CAAkBJ;AAFG,CAAL,CAA7B;;AAKA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,UAAU,EAAGO,EAAD,IAAQS,QAAQ,CAAChB,UAAU,CAACO,EAAD,CAAX,CADU;AAEtCN,EAAAA,SAAS,EAAGM,EAAD,IAAQS,QAAQ,CAACf,SAAS,CAACM,EAAD,CAAV;AAFW,CAAL,CAAnC;;AAKA,eAAeV,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Product from '../components/Product/Product';\nimport NoMatch from '../components/NoMatch/NoMatch';\nimport { getProduct } from '../actions/products-actions';\nimport { addToCart } from '../actions/cart-actions';\n\nclass ProductContainer extends Component {\n\n  componentDidMount() {\n    const { getProduct, match } = this.props;\n    getProduct(match.params.id);\n  }\n\n  render() {\n    const { selectedProduct, addToCart, cartItems, match } = this.props;\n    if (selectedProduct) {\n      return (\n        <Product\n          cartItems={cartItems}\n          product={selectedProduct}\n          matchId={match.params.id}\n          addToCart={(id) => addToCart(id)}\n        />\n      );\n    }\n    else {\n      return <NoMatch />\n    }\n  };\n};\n\nconst mapStateToProps = store => ({\n  selectedProduct: store.productsReducer.selectedProduct,\n  cartItems: store.cartReducer.cartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProduct: (id) => dispatch(getProduct(id)),\n  addToCart: (id) => dispatch(addToCart(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\n"]},"metadata":{},"sourceType":"module"}